# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

env: 
  BRANCH_NAME: '565-en-folders-and-user-guide'
  BUILD_DOCS_BRANCH: 'prefix-dest-with-en'

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["565-en-folders-and-user-guide"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: "${{env.BRANCH_NAME}}"
          path: "content-repo"
      - name: Inspect superoffice-docs content
        shell: pwsh
        run: |
          $content = Get-ChildItem "./content-repo" 
          Write-Host "$($content)"
      - name: Inspect directory pwd
        run: |
          echo "$(pwd)"

      - name: Clone build-docs
        env:
          TOKEN: ${{ secrets.GH_PAT }}
        run: |
          echo "cd into workspace"
          cd $GITHUB_WORKSPACE
          echo "$(pwd)"
          git clone -b "${{env.BUILD_DOCS_BRANCH}}" "https://${TOKEN}@github.com/SuperOfficeDocs/build-docs.git" $GITHUB_WORKSPACE/build-docs
          echo after clone
          echo "Current directory $(pwd)"
          cd $GITHUB_WORKSPACE
          echo "Switching to GH workspace... $(pwd)"
          ls -la
      - name: Copy superoffice-docs into "./build-docs/superoffice-docs"
        shell: pwsh
        run: |
          $content = Get-ChildItem "./content-repo" 
          Write-Host "$($content)"
          $source = "./content-repo"
          $destination = "$./build-docs/superoffice-docs"
          Write-Host "Copying $source into $destination"
          Copy-Item -Path $source -Destination $destination -Recurse -Force
          



